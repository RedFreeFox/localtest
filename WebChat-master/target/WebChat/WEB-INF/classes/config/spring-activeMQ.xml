<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.14.5.xsd
        ">


    <!--&lt;!&ndash; 扫描包注解 &ndash;&gt;
    <context:component-scan base-package="com.ccq.*" />

    &lt;!&ndash; ActiveMQ 连接工厂 &ndash;&gt;
    &lt;!&ndash; 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供&ndash;&gt;
    &lt;!&ndash; 如果连接网络：tcp://ip:61616；未连接网络：tcp://localhost:61616 以及用户名，密码&ndash;&gt;
    <amq:connectionFactory id="amqConnectionFactory"
                           brokerURL="tcp://47.107.80.121:61616" userName="admin" password="admin"  />

    &lt;!&ndash; Spring Caching连接工厂 &ndash;&gt;
    &lt;!&ndash; Spring用于管理真正的ConnectionFactory的ConnectionFactory &ndash;&gt;
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        &lt;!&ndash; 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory &ndash;&gt;
        <property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
        &lt;!&ndash; 同上，同理 &ndash;&gt;
        &lt;!&ndash; <constructor-arg ref="amqConnectionFactory" /> &ndash;&gt;
        &lt;!&ndash; Session缓存数量 &ndash;&gt;
        <property name="sessionCacheSize" value="100" />
    </bean>

    &lt;!&ndash; Spring JmsTemplate 的消息生产者 start&ndash;&gt;

    &lt;!&ndash; 定义JmsTemplate的Queue类型 &ndash;&gt;
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        &lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;
        <constructor-arg ref="connectionFactory" />
        &lt;!&ndash; 非pub/sub模型（发布/订阅），即队列模式 &ndash;&gt;
        <property name="pubSubDomain" value="false" />
    </bean>

    &lt;!&ndash; 定义JmsTemplate的Topic类型 &ndash;&gt;
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        &lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;
        <constructor-arg ref="connectionFactory" />
        &lt;!&ndash; pub/sub模型（发布/订阅） &ndash;&gt;
        <property name="pubSubDomain" value="true" />
    </bean>-->


    <!--<context:annotation-config/>
    <context:component-scan base-package="com.ccq.*"/>-->

   <!-- &lt;!&ndash; 读取配置文件 &ndash;&gt;
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:conf/spring-config.properties</value>
            </array>
        </property>
    </bean>-->

    <!-- 连接 activemq-->
    <amq:connectionFactory id="amqConnectionFactory" brokerURL="tcp://47.107.80.121:61616" userName="admin" password="admin"/>

    <!-- 这里可以采用连接池的方式连接PooledConnectionFactoryBean -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 配置连接 -->
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
        <!-- 会话的最大连接数 -->
        <property name="sessionCacheSize" value="100"/>
    </bean>

    <!-- 定义消息队列topic类型，queue的方式差不多 -->
    <bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">
        <!-- 定义名称 -->
        <constructor-arg index="0" value="topic"/>
    </bean>

    <!-- 配置JMS模板（topic），Spring提供的JMS工具类，它发送、接收消息。 -->
    <!-- 为了测试发送消息，保留jmsTemplate的配置，实际不存在发送，只需要配置监听即可 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="topic"/>
        <!-- 非pub/sub模型（发布/订阅），true为topic,false为queue -->
        <property name="pubSubDomain" value="true"/>
    </bean>

    <!-- 监听方式，这种方式更实用，可以一直监听消息 -->
    <bean id="topicMessageListen" class="com.ccq.listener.TopicMessageListen"/>
    <bean id="defaultMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <!-- 注册activemq名称 -->
        <property name="destination" ref="topic"/>
        <property name="messageListener" ref="topicMessageListen"/>
    </bean>




</beans>