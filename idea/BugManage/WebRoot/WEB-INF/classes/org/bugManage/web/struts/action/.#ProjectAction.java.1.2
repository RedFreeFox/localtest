/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.bugManage.web.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.bugManage.entity.Project;
import org.bugManage.entity.Projectuser;
import org.bugManage.entity.Userinfo;
import org.bugManage.service.ProjectService;
import org.bugManage.service.ProjectUserService;
import org.bugManage.web.struts.form.ProjectForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-22-2012
 * 
 * XDoclet definition:
 * @struts.action path="/project" name="projectForm" input="/form/project.jsp" parameter="method" scope="request"
 * @struts.action-forward name="success" path="/success.jsp"
 */
public class ProjectAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	private ProjectService projectService;
	private ProjectUserService projectuserService;

	public void setProjectuserService(ProjectUserService projectuserService) {
		this.projectuserService = projectuserService;
	}


	public void setProjectService(ProjectService projectService) {
		this.projectService = projectService;
	}
	
	
	//查看项目信息(除管理员和项目经理外)
	public ActionForward LookProjectInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获取当前用户
		HttpSession session = request.getSession();
		Userinfo user = (Userinfo) session.getAttribute("user");
		//根据用户编号查询项目信息
		Project project = projectService.findByUserId(user.getUserid());
		//根据项目编号查询,根据项目编号查询项目信息
		
		for (int i = 0; i < 4; i++) {
			String str = "";
			List<Object[]> pu = projectuserService.findByProjectId(project.getProjectid(),new Long(i));
			for (Object[] objects : pu) {
				str += objects[1].toString()+";";
			}
			request.setAttribute("p"+i, str);
		}
		//设置到会话中
		request.setAttribute("project", project);
		return mapping.findForward("LookProjectInfo");
	}
	
	//查看项目信息(项目经理)
	public ActionForward LookProject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获取当前用户
		HttpSession session = request.getSession();
		Userinfo user = (Userinfo) session.getAttribute("user");
		//根据用户编号查询项目信息
		Project project = projectService.findByUserId(user.getUserid());
		//设置到会话中
		request.setAttribute("project", project);
		return mapping.findForward("LookProject");
	}
	
	/*****************************Start管理员操作*******************************************/
	
	//查询所有项目信息(过滤查询)--管理员操作
	public ActionForward FindProjectInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//查询所有（除注销项目外）
		List<Project> list = projectService.findAllProjectByStatus();
		//设置到会话中
		request.setAttribute("projects", list);
		return mapping.findForward("FindProjectInfo");
	}
	
	//根据项目名称和状态查询项目信息(管理员操作)
	public ActionForward FindProjectByNameAndStatus(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ProjectForm projectForm = (ProjectForm) form;
		//获取实体对象
		Project project = projectForm.getProject();
		//查询
		List<Project> list = projectService.findProject(project);
		//设置到会话中
		request.setAttribute("projects", list);
		return mapping.findForward("FindProjectInfo");
	}
	
	//添加项目信息
	public ActionForward AddProjectInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ProjectForm projectForm = (ProjectForm) form;
		//获取实体对象
		Project project = projectForm.getProject();
		//将完成时间设置为空
		project.setFinishtime(null);
		//调用添加的方法
		projectService.addProject(project);
		return mapping.findForward("DeleteProject");
	}
	
	//转到修改项目信息页面(管理员操作)
	public ActionForward ToModifyProjectInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获取编号
		Long projectid = new Long(request.getParameter("projectid"));
		//根据编号查询
		Project project = projectService.findById(projectid);
		//将查询结果集设置到会话中
		request.setAttribute("project", project);
		return mapping.findForward("ToModifyProjectInfo");
	}
	
	//修改项目信息(管理员操作)
	public ActionForward ModifyProjectInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获得表单实例
		ProjectForm projectForm = (ProjectForm) form;
		//获取实体对象
		Project project = projectForm.getProject();
		//调用修改方法
		projectService.modifyProject(project);
		return mapping.findForward("ModifyProjectInfo");
	}
	
	//删除项目信息（修改其状态）--管理员操作
	public ActionForward DeleteProject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获取编号
		Long projectid = new Long(request.getParameter("projectid"));
		//根据编号查询
		Project project = projectService.findById(projectid);
		project.setStatus(new Long(4));
		//调用修改方法
		projectService.modifyProject(project);
		return mapping.findForward("DeleteProject");
	}
	
	/*****************************End管理员操作*******************************************/
}