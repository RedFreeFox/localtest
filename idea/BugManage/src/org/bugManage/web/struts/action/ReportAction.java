/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.bugManage.web.struts.action;

import java.awt.Font;
import java.awt.RenderingHints;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.bugManage.entity.Bug;
import org.bugManage.entity.Projectmodel;
import org.bugManage.service.ProjectModelService;
import org.bugManage.service.ReportService;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/** @category ReportAction
 * @author gikoukou
 * MyEclipse Struts
 * Creation date: 02-22-2012
 * 
 * XDoclet definition:
 * @struts.action path="/report" name="reportForm" input="/form/report.jsp" parameter="method" scope="request"
 * @struts.action-forward name="success" path="/success.jsp"
 */
public class ReportAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	private ReportService reportService;
	private ProjectModelService projectmodelService;
	
	
	public void setProjectmodelService(ProjectModelService projectmodelService) {
		this.projectmodelService = projectmodelService;
	}

	public void setReportService(ReportService reportService) {
		this.reportService = reportService;
	}

	//根据用户所选择的项目来分析报表
	private Long fatherId;
	private String name;
	 
	public Long getFatherId() {
		return fatherId;
	}

	public void setFatherId(Long fatherId) {
		this.fatherId = fatherId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	//模块报表（饼状图）
	public ActionForward ModuleReport(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//设置全局变量
		String strmoduleid = request.getParameter("modelid");
		
		if (strmoduleid!=null) {
			this.setFatherId(new Long(strmoduleid));
		}
		this.setName(projectmodelService.toProjectModel(this.getFatherId()).getProjectmodelname());
		
			DefaultPieDataset dataset = getDataSet();
			response.setContentType("image/jpeg");
			StandardChartTheme theme = new StandardChartTheme("unicode"){
				public void apply(JFreeChart chart){
					chart.getRenderingHints().put(RenderingHints.KEY_TEXT_ANTIALIASING, 
							RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);
					super.apply(chart);
				}
			};
			theme.setExtraLargeFont(new Font("宋体",Font.PLAIN,14));
			theme.setLargeFont(new Font("宋体",Font.PLAIN,14));
			theme.setRegularFont(new Font("宋体",Font.PLAIN,12));
			theme.setSmallFont(new Font("宋体",Font.PLAIN,10));
			ChartFactory.setChartTheme(theme);
			
			JFreeChart chart = ChartFactory.createPieChart3D(
					"Bug模块分布图", 
					dataset,
					true, 
					false, 
					false);
			
			try {
				ChartUtilities.writeChartAsJPEG(response.getOutputStream(), chart, 600, 400,null);
			} catch (IOException e) {
				
			}
			
		return null;
	}
	
	//Bug模块数据（饼状图）
	public DefaultPieDataset getDataSet(){
		DefaultPieDataset dataset = new DefaultPieDataset();
		List<Object[]> list = reportService.findReport(this.getFatherId());
		
		//在Bug项目中，Bug管理这个模块的Bug数量
		for (int i = 0; i < list.size(); i++) {
			dataset.setValue(list.get(i)[0].toString().toString(), new Double(list.get(i)[1].toString()));
		}
		return dataset;
	}
	
	
	
	
	//日期报表（线状图）
	public ActionForward DateReport(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		CategoryDataset dataset = getDataSet1();
		response.setContentType("image/jpeg");
		StandardChartTheme theme = new StandardChartTheme("unicode"){
			public void apply(JFreeChart chart){
				chart.getRenderingHints().put(RenderingHints.KEY_TEXT_ANTIALIASING, 
						RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);
				super.apply(chart);
			}
		};
		theme.setExtraLargeFont(new Font("宋体",Font.PLAIN,14));
		theme.setLargeFont(new Font("宋体",Font.PLAIN,14));
		theme.setRegularFont(new Font("宋体",Font.PLAIN,12));
		theme.setSmallFont(new Font("宋体",Font.PLAIN,10));
		ChartFactory.setChartTheme(theme);
		
		JFreeChart chart = ChartFactory.createLineChart3D(
				"Bug时间分布图", 
				"按天统计Bug", 
				"Bug数量", 
				dataset, 
				PlotOrientation.VERTICAL, 
				true, 
				false, 
				false);
		
		try {
			ChartUtilities.writeChartAsJPEG(response.getOutputStream(), chart,900, 500,null);
		} catch (IOException e) {
			
		}
		
	return null;
	}
	
	//日期报表数据（线状图）
	public CategoryDataset getDataSet1(){
		DefaultCategoryDataset dataset = new DefaultCategoryDataset();
		List<Object[]> list = reportService.findByDay();
		
		//在Bug项目中，Bug管理这个模块的Bug数量
		for (int i = 0; i < list.size(); i++) {
			dataset.addValue(new Double(list.get(i)[1].toString()), this.getName(), list.get(i)[0].toString());
		}
		return dataset;
	}
	
	//反馈报表（柱状图）
	public ActionForward BackReport(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CategoryDataset dataset = getDataSet2();
		response.setContentType("image/jpeg");
		StandardChartTheme theme = new StandardChartTheme("unicode"){
			public void apply(JFreeChart chart){
				chart.getRenderingHints().put(RenderingHints.KEY_TEXT_ANTIALIASING, 
						RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);
				super.apply(chart);
			}
		};
		theme.setExtraLargeFont(new Font("宋体",Font.PLAIN,14));
		theme.setLargeFont(new Font("宋体",Font.PLAIN,14));
		theme.setRegularFont(new Font("宋体",Font.PLAIN,12));
		theme.setSmallFont(new Font("宋体",Font.PLAIN,10));
		ChartFactory.setChartTheme(theme);
		
		JFreeChart chart = ChartFactory.createBarChart3D(
		"Bug反馈图",
		"按月反馈统计", 
		"Bug数量", 
		dataset, 
		PlotOrientation.VERTICAL,
		true, 
		false, 
		false);
		
		try {
			ChartUtilities.writeChartAsJPEG(response.getOutputStream(), chart, 600, 400,null);
		} catch (IOException e) {
			
		}
		
	return null;
	}
	
	//反馈报表数据（柱状图）
	public CategoryDataset getDataSet2(){
		DefaultCategoryDataset dataset = new DefaultCategoryDataset();
		List<Object[]> list = reportService.findByMonth();
		for (int i = 0; i < list.size(); i++) {
			dataset.addValue(new Double(list.get(i)[1].toString()), list.get(i)[0].toString(),list.get(i)[0].toString() );
		}
		return dataset;
	}
	
	
	//加载报表页面
	public ActionForward LoadReport(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		
		List<Projectmodel> list = new ArrayList<Projectmodel>();
		list = projectmodelService.findAllProjectModel();
//		for (Projectmodel projectmodel : list) {
//			System.out.println(projectmodel.getProjectmodelname());
//		}
		request.setAttribute("reports", list);
		return mapping.findForward("LoadReport");
	}
	
	
}