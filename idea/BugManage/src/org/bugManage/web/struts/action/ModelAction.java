/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.bugManage.web.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.bugManage.entity.Project;
import org.bugManage.entity.Projectmodel;
import org.bugManage.service.BugService;
import org.bugManage.service.ProjectModelService;
import org.bugManage.service.ProjectService;
import org.bugManage.service.ProjectUserService;
import org.bugManage.web.struts.form.ModelForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-25-2012
 * 
 * XDoclet definition:
 * @struts.action path="/model" name="modelForm" parameter="method" scope="request"
 * @struts.action-forward name="success" path="/success.jsp"
 */
public class ModelAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	private ProjectModelService projectmodelService;
	private BugService bugService;
	private ProjectService projectService;
	
	public void setProjectService(ProjectService projectService) {
		this.projectService = projectService;
	}

	public void setBugService(BugService bugService) {
		this.bugService = bugService;
	}


	private ProjectUserService projectuserService;
	
	public void setProjectuserService(ProjectUserService projectuserService) {
		this.projectuserService = projectuserService;
	}

	public void setProjectmodelService(ProjectModelService projectmodelService) {
		this.projectmodelService = projectmodelService;
	}

	//转到项目模块页面
	public ActionForward ToAdminProModel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Long projectid = null;
		//获取项目编号
		if (request.getParameter("projectid") != null) {
			projectid = new Long(request.getParameter("projectid"));
		}
		 
//		if (projectid == null) {
//			projectid = (Long)request.getAttribute("projectid");
//		}
		//根据项目编号查询模块信息
		List<Projectmodel> list = projectmodelService.ModelByProjectId(projectid);
		//设置到会话中
//		HttpSession session = request.getSession();
		request.setAttribute("model", list);
		request.setAttribute("projectid", projectid);
		return mapping.findForward("ToAdminProModel");
	}
	
	//转到项目人员设置页面
	public ActionForward ToAdminProUser(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Long projectid=null;
		//获取项目编号
		if(request.getParameter("projectid")!=null){
			projectid = new Long(request.getParameter("projectid"));
		}else{
			projectid = new Long(request.getAttribute("projectid").toString());
		}
		for (int i = 0; i < 4; i++) {
			String str = "";
			List<Object[]> pu = projectuserService.findByProjectId(projectid,new Long(i));
			for (Object[] objects : pu) {
				str += objects[1].toString()+";";
			}
			request.setAttribute("p"+i, str);
		}
		request.setAttribute("projectid", projectid);
		return mapping.findForward("ToAdminProUser");
	}
	
	//点击树形菜单将值转到本页面(必须传的值：模块编号)
	public ActionForward ToProjectModel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获得模块编号
		Long projectmodelid = new Long(request.getParameter("Model"));
		//根据模块编号查询
		Projectmodel model = projectmodelService.toProjectModel(projectmodelid);
		//设置到会话中
			request.setAttribute("model", model);
			//根据项目编号查询模块信息
			Projectmodel pm = (Projectmodel) projectmodelService.findByProID(model.getProject().getProjectid());
			//设置到会话中
			request.setAttribute("pm", pm);
		return mapping.findForward("ToProjectModel");
	}
	
	
	

	//添加模块信息(必须传的值：项目编号、父模块编号、子模块名称)
	public ActionForward AddProjectModel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ModelForm modelForm = (ModelForm) form;
		Projectmodel model = modelForm.getModel();
		projectmodelService.addProjectModel(model);
		return mapping.findForward("AddProjectModel");
	}
	
	//修改项目模块信息
	public ActionForward ModifyProjectModel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Long projectid = new Long(request.getParameter("projectid"));
		//获得模块编号
		Long modelid = new Long(request.getParameter("sonmodel"));
		//获得项目信息
		ModelForm modelForm = (ModelForm) form;
		//获得实体对象
		Projectmodel model = projectmodelService.toProjectModel(modelid);
		Project project = projectService.findById(projectid);
		System.out.println(project.getProjectname());
		//model.setProject(project);
		//model.setProject(modelForm.getModel().getProject());
		//给对象设置值//
		String name=modelForm.getModel().getProjectmodelname();
		model.setProjectmodelname(name);
		projectmodelService.modifyProjectModel(model);
		ActionForward forward = new ActionForward("/model.do?method=ToAdminProModel&projectid="+projectid);
		forward.setRedirect(true);
		return forward;
	}
	
	
	//删除项目模块信息
	public ActionForward DelProjectModel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获得模块编号
		Long modelid = new Long(request.getParameter("sonmodel"));
		//获得实体对象
		Projectmodel model = projectmodelService.toProjectModel(modelid);
		//给对象设置值
		model.setStatus(new Long(4));
		projectmodelService.modifyProjectModel(model);
		Long projectid = model.getProject().getProjectid();
		ActionForward forward = new ActionForward("/model.do?method=ToAdminProModel&projectid="+projectid);
		return forward;
	}
	
	

	
	
	
}